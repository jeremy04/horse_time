<script>
  var eligibleHorses;
  var draftOrder;
  var pickCount = <%= @pick_count %>;
  var subscribed = true;
  var spareHorses = [];

  $( document ).ready(function() {

    var client = new Faye.Client('/faye')
    client.disable('websocket');

    function getCookieValue(a, b) {
      b = document.cookie.match('(^|;)\\s*' + a + '\\s*=\\s*([^;]+)');
      return b ? b.pop() : '';
    }

    function spareHorses(roster, eligibleHorses)
    {
      used = _.flatten(_.map(_.values(roster), function(obj) { 
        return obj.horse_team.concat(obj.other_team) 
      }));
 
      return _.difference(eligibleHorses.horse_team.concat(eligibleHorses.other), used);
    }

    function shortenName(name) {
      var first = name.split(" ")[0][0] + "."
      var last = name.split(" ")[1]
      return first + " " + last;
    }


    function generateDraft(draftOrder, pickOrder) 
    {
      $("#" + pickOrder[pickCount]).css("color","red");
      
      _.each(draftOrder, function(player) {
        
        _.each(roster[player]["horse_team"].concat(roster[player]["other_team"]), function(horse) {
          $("#horses_selected #" + player + "_horses").append("<p data-horse='" + shortenName(horse) + "' class='indent'>" + horse + "</p>");
        });
        
        $("input[name=\"" + player + "\"]").keypress(function (e) {
          if (e.which == 13) {
             $("#draft" + player).click();
          }
        });

        if(subscribed) {
          client.subscribe('/horse_selected', function(message) {          
            console.log(message.player +" picked " + message.horse);
            
            $("#horses_selected #" + message.player + "_horses").append("<p class='indent'>" + message.horse + "</p>");

            spareHorses = _.without(spareHorses, message.horse);
            $("#draft" + message.player).css("display", "none");
            $("input[name=\"" + message.player + "\"]").css("display", "none");
            $("input[name=\"" + message.player + "\"]").val('');
            $("#" + message.player).css("color", "black");
            pickCount += 1;
            nextPlayer = pickOrder[pickCount];
            jQuery.noConflict();
            $("input[name=\"" + nextPlayer + "\"]").autocomplete({
              orientation: "auto",
              minChars: '2',
              lookup: spareHorses,
              onSelect: function() { return; }
            });
            

            var ht_cookie = JSON.parse(unescape(getCookieValue("horsetime")));

            if (ht_cookie.name == nextPlayer) {
              $("#draft" + nextPlayer).css("display", "inline");
              $("input[name=\"" + nextPlayer + "\"]").css("display", "inline");                
            }

            if (message.player == nextPlayer)
            {
              $("#" + nextPlayer).css("color", "green");
            }
            else
            {
              $("#" + nextPlayer).css("color", "red");  
            }
          });
        }
        
        subscribed = false;

        $("#draft" + player).on("click", function(){
          
          var currentPlayer = pickOrder[pickCount];

          var selection = $("input[name=\"" + currentPlayer + "\"]").val();
          if (selection == "") { alert("Select a horse bro!"); return; }
          if (!_.contains(spareHorses, selection)) { alert("That's not a horse, bro"); return; }

          var currentPicks = roster[currentPlayer];

          if (_.contains(eligibleHorses.other, selection) && currentPicks.other_team.length == 2)
          {
            alert("You already have the limit for other team bro");
            return;
          }

          if (_.contains(eligibleHorses.horse_team, selection) && currentPicks.horse_team.length == 2)
          {
            alert("You already have the limit for penguins bro");
            return;
          }

          // Validation pass, add to my picks!

          if(_.contains(eligibleHorses.other, selection)) {
            currentPicks.other_team.push(selection);
            var other_team_horse = selection;
          }
          else
          {
            currentPicks.horse_team.push(selection);
            var primary_team_horse = selection;
          }

          // UPDATE REDIS
          roster[currentPlayer] = currentPicks;
          
          $.post('/update_pick.json', 
            { room_code: "<%= @room_code %>",
              horse_team: primary_team_horse, 
              other_team: other_team_horse, 
              name: currentPlayer
            }, 
              function(returnedData){
                console.log(returnedData);
          });

          client.publish('/horse_selected', {
            player: currentPlayer,
            horse: selection
          });


        });

      });
    }

    function show_draft(pickOrder) {
      randomPlayers = <%= @players.to_json %>;

      _.each(randomPlayers, function(player, id) {

        var player_id = player.replace(/\s/, '');

        $("#selectHorseContainer").append("<p id='" + player_id + "'>" + player );
        $("#horses_selected").append("<div id='" + player_id + "_horses'><h4><u>" + player + "</u></h4></div>");

        $("#selectHorseContainer").append("<input type='text' style=\"display: none\" class=\"form-control\" autocomplete=\"on\" name=\"" + player_id + "\"><button type='submit' style=\"display: none\" class=\"btn btn-default\" id=\"draft" + player_id +  "\" role=\"button\">Draft</button></p>");

          jQuery.noConflict();

          $("input[name=\"" + player_id + "\"]").autocomplete({
            orientation: 'auto',
            minChars: '2',
            lookup: spareHorses,
            onSelect: function() { return; }
          });
        
        var ht_cookie = JSON.parse(unescape(getCookieValue("horsetime")));
       
        if (ht_cookie.name == pickOrder[pickCount] ) {
          $("#draft" + ht_cookie.name).css("display", "inline");
          $("input[name=\"" + ht_cookie.name + "\"]").css("display", "inline");
        }

      });

    }

    function top_points(players, goals)
    {
      players =  _.map(players, function(player) {
        hash = {}; 
        hash[shortenName(player)] =  
        _.findWhere(goals, {"name": shortenName(player) }).points;

        return hash;
      });
      
      players = _.sortBy(players, function(player) {
        return -_.values(player)[0];
      });
      return players.slice(0, 5);
    }


    $.get("/players.json", function( data ) {
        draftOrder = <%= @players.to_json %>;
        roster = <%= @roster.to_json %>;

        eligibleHorses = data;
        spareHorses = spareHorses(roster, eligibleHorses);

        pickOrder = <%= @pick_order.to_json %>;

        show_draft(pickOrder);
        generateDraft(draftOrder, pickOrder);

        $.get("/scores.json", function(data) {

          _.each(data.goals, function(points, player){ 
            $('p[data-horse="' + player + '"]').append(" G: " + points);
          });

          _.each(data.assists, function(points, player){ 
            $('p[data-horse="' + player + '"]').append(" A: " + points);
          });


        });


        $.get("/scores.json", function(data) {
          var goals = data.goals;
          var assists = data.assists;
          
          goals = _.map(goals, function(value, key) { 
            var hsh = {};
            hsh["name"] = key;
            hsh["points"] = value;
            return hsh;
          });

          assists = _.map(assists, function(value, key) { 
            var hsh = {};
      
            hsh["name"] = key;
            hsh["points"] = value;
            return hsh;
          });


          var points = goals.concat(assists);
          points = _(points).groupBy("name");
          
          points = _(points).map(function(g, key) {
            return { name: key, 
                     points: _(g).reduce(function(m,x) { return m + x.points; }, 0) };
          });


          $.get("/players.json", function(data) {


            _.each(top_points(data.horse_team, points), function(player) {
              $("#horse_team_scorers").append("<p class='indent'>" + _.keys(player)[0] + " : " +  _.values(player)[0] + "</p>");
            });

            _.each(top_points(data.other, points), function(player) {
              $("#other_team_scorers").append("<p class='indent'>" + _.keys(player)[0] + " : " +  _.values(player)[0] + "</p>");
            });

           
            
          });

        
        });

    });


    

});
</script>
<div class="row">
<div class="col-md-4" id="selectHorse">
  <h2>Draft Order</h2>
  <div id='selectHorseContainer'>
  </div>
</div>
<div class="col-md-4" id="horses">
  <h2>Horses Selected</h2>
  <div id="horses_selected">
  </div>
</div>

<div class="col-md-4" id="tophorses">
  <h2>Leading Scorers</h2>
  <div id="top_horses">
    <h3>Penguins</h3>
    <div id="horse_team_scorers">
    </div>
    <BR />
    <h3>Other team</h3>
    <div id="other_team_scorers">
    </div>
  </div>
</div>

</div>

<hr>